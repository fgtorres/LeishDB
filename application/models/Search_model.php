<?phpclass Genes_model extends CI_Model{    public function __construct()    {        $this->load->database();    }    //Function for search Gene by ID    public function SearchbyGeneID($id)    {        $this->db->from('genes');        $this->db->join('proteins', 'proteins.proteinid = genes.proteinid', 'left');        $this->db->where('genes.id', $id);        $query = $this->db->get();        return $query->result_array();    }    //Function for databases by proteinid    public function SearchDatabasesbyProteinID($proteinid)    {        $this->db->from('crossreference');        $this->db->join('databases', 'crossreference.databaseid = databases.id', 'left');        $this->db->where('crossreference.proteinid', $proteinid);        $query = $this->db->get();        return $query->result_array();    }    //Function for search Gene by Chromossome    public function SearchGenesbyChromossome($genomeid)    {        $this->db->from('genes');        $this->db->join('proteins', 'genes.proteinid = proteins.proteinid', 'left');        $this->db->where('genes.genomeid', $genomeid);        $this->db->and_where('genes.proteinid <> ', "''");        $query = $this->db->get();        return $query->result_array();    }    //Function for search ncRNA by Chromossome    public function SearchncRNAbyChromossome($genomeid)    {        $this->db->from('ncrna');        $this->db->where('ncrna.genomeid', $genomeid);        $query = $this->db->get();        return $query->result_array();    }}function Searchbygenescoordinates($conexao, $genomeid, $start, $end){    $genomeid = mysqli_real_escape_string($conexao, $genomeid);    $result = mysqli_query($conexao, "select g.*, p.* from genes as g left join proteins as p        on (g.proteinid = p.proteinid) where g.genomeid = {$genomeid} AND (g.startgenomelocal >= {$start}         AND g.endgenomelocal <= {$end}) and g.proteinid <> ''");    $ncrnas = array();    while ($ncrna = mysqli_fetch_assoc($result)) {        array_push($ncrnas, $ncrna);    }    return $ncrnas;}function Searchbyncrnacoordinates($conexao, $genomeid, $start, $end){    $genomeid = mysqli_real_escape_string($conexao, $genomeid);    $start = mysqli_real_escape_string($conexao, $start);    $end = mysqli_real_escape_string($conexao, $end);    $result = mysqli_query($conexao, "select rna.* from ncrna as rna where rna.genomeid = {$genomeid} AND     (rna.start_location >= {$start} AND rna.end_location <= {$end})");    $ncrnas = array();    while ($ncrna = mysqli_fetch_assoc($result)) {        array_push($ncrnas, $ncrna);    }    return $ncrnas;}//Function for search All Optionsfunction SearchbyAllOptions($conexao, $term){    $term = mysqli_real_escape_string($conexao, $term);    $query = "select g.*, p.proteinname from genes as g left join proteins as p" .        " on (g.proteinid = p.proteinid) where UPPER(p.proteinname) LIKE UPPER('%" . $term . "%') or " .        " UPPER(g.proteinid) LIKE UPPER('%" . $term . "%') or g.id LIKE '" . $term . "' ".        " or UPPER(p.genename) LIKE UPPER('" . $term . "') and g.proteinid <> ''";    $result = mysqli_query($conexao,$query);    $genes = array();    if (mysqli_num_rows($result)>0) {        while ($gene = mysqli_fetch_assoc($result)) {            array_push($genes, $gene);        }    }    return $genes;}//Function for search GO TERMSfunction SearchAllGOTerms($conexao, $proteinid){    $proteinid = mysqli_real_escape_string($conexao, $proteinid);    $query = "select * from proteinsgo as pgo where pgo.proteinid LIKE '%" . $proteinid . "%'";    $result = mysqli_query($conexao,$query);    $goterms = array();    if (mysqli_num_rows($result)>0) {        while ($goterm = mysqli_fetch_assoc($result)) {            array_push($goterms, $goterm);        }    }    return $goterms;}function SearchProteinNameJSON($conexao){    $sql = "select DISTINCT proteinname from proteins as p";    $result = mysqli_query($conexao,$sql);    $proteins = array();    if (mysqli_num_rows($result)>0) {        while ($proteinname = mysqli_fetch_assoc($result)) {            array_push($proteins, $proteinname);        }    }    return $proteins;}//Function for search GO TERMS by typefunction SearchAllGOTermsbytype($conexao, $proteinid, $type){    $proteinid = mysqli_real_escape_string($conexao, $proteinid);    $type = mysqli_real_escape_string($conexao, $type);    $query = "select pgo.*, go.* from proteinsgo as pgo, geneontology as go 	where TRIM(go.goid) = TRIM(pgo.goid) and pgo.proteinid LIKE '%" . $proteinid . "%' and go.type LIKE '%" . $type . "%'";    $result = mysqli_query($conexao,$query);    $goterms = array();	    if (mysqli_num_rows($result)>0) {        while ($goterm = mysqli_fetch_assoc($result)) {            array_push($goterms, $goterm);        }    }    return $goterms;}//Function for search Gene by SWISS-PROT IDfunction getSequenceGene($conexao, $genomeid, $end, $start){    $genomeid = mysqli_real_escape_string($conexao, $genomeid);    $start = mysqli_real_escape_string($conexao, $start);    $end = mysqli_real_escape_string($conexao, $end);    if($end < $start){        $var_tmp = $end;        $end = $start;        $start = $var_tmp;    }    $result = mysqli_query($conexao, "SELECT SUBSTRING(chromossomes.sequence FROM {$start} FOR ({$end}-{$start})) as sequence     FROM chromossomes WHERE chromossomes.idchromosome = {$genomeid}");    return mysqli_fetch_assoc($result);}